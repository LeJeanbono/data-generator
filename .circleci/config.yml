# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11.0.6-jdk-stretch
      - image: circleci/mongo:4.2.5

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - run: cd data-generator

      - run:
          name: gradle public core
          command: gradle data-generator-core:publishToMavenLocal

      - run:
          name: gradle public mongodb
          command: gradle data-generator-mongodb:publishToMavenLocal
      # Download and cache dependencies
      #- restore_cache:
      #    keys:
      #      - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
      #      - v1-dependencies-

      - run: gradle dependencies

      #- save_cache:
      #    paths:
      #      - ~/.gradle
      #    key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: gradle bootRun data-generator-mongodb-e2e
          command: gradle :data-generator-mongodb-e2e:bootRun
          background: true

      - run:
          name: Wait for Spring Boot
          command: dockerize -wait tcp://localhost:8080 -timeout 1m

      - run: gradle test

      - store_test_results:
          path: ~/repo/data-generator-core/build/test-results
      - store_test_results:
          path: ~/repo/data-generator-mongodb-e2e/build/test-results

      - store_artifacts:
          path: ~/repo/data-generator-mongodb-e2e/build/reports/tests/test