#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.1.1
references:
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - sources-{{ .Revision }}
jobs:
  build:
    docker:
      - image: circleci/openjdk:11.0.6-jdk-stretch
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: sources-{{ .Revision }}
          paths:
            - .
  core:
    docker:
      - image: circleci/openjdk:11.0.6-jdk-stretch

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - *restore_repo
      - run:
          name: 🧪 Test core
          command: |
            chmod +x gradlew
            ./gradlew :data-generator-core:test

      - run:
          name: jacoco
          command: ./gradlew :data-generator-core:jacocoTestReport

      - codecov/upload

      - store_test_results:
          path: ~/repo/data-generator-core/build/test-results
  mongodb:
    docker:
      - image: circleci/openjdk:11.0.6-jdk-stretch
      - image: circleci/mongo:4.4.0

    working_directory: ~/repo

    steps:
      - *restore_repo
      - run:
          name: 🏗️ Publish core
          command: |
            chmod +x gradlew
            ./gradlew :data-generator-core:publishToMavenLocal

      - run:
          name: 🏗️ Publish mongodb
          command: ./gradlew :data-generator-mongodb:publishToMavenLocal

      - run:
          name: 🖥️ Compile mongodb E2E
          command: |
            cd data-generator-mongodb-e2e
            chmod +x gradlew
            ./gradlew dependencies

      - run:
          name: 🏎️ Run mongodb E2E
          command: |
            cd data-generator-mongodb-e2e
            ./gradlew bootRun
          background: true

      - run:
          name: ⏱ Wait mongodb E2E start
          command: dockerize -wait tcp://localhost:8080 -timeout 1m

      - run:
          name: 🧪 Test mongodb
          command: |
            cd data-generator-mongodb-e2e
            ./gradlew test

      - store_test_results:
          path: ~/repo/data-generator-mongodb-e2e/build/test-results
      - store_artifacts:
          path: ~/repo/data-generator-mongodb-e2e/build/reports/tests/test

  postgres:
    docker:
      - image: circleci/openjdk:11.0.6-jdk-stretch
      - image: circleci/postgres:12.4-postgis-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: ~/repo

    steps:
      - *restore_repo
      - run:
          name: 🏗️ Publish core
          command: |
            chmod +x gradlew
            ./gradlew :data-generator-core:publishToMavenLocal

      - run:
          name: 🏗️ Publish postgres
          command: ./gradlew :data-generator-postgres:publishToMavenLocal

      - run:
          name: 🖥️ Compile postgres E2E
          command: |
            cd data-generator-postgres-e2e
            chmod +x gradlew
            ./gradlew dependencies

      - run:
          name: 🏎️ Run postgres E2E
          command: |
            cd data-generator-postgres-e2e
            ./gradlew bootRun
          background: true

      - run:
          name: ⏱ Wait postgres E2E start
          command: dockerize -wait tcp://localhost:8080 -timeout 1m

      - run:
          name: 🧪 Test postgres
          command: |
            cd data-generator-postgres-e2e
            ./gradlew test

      - store_test_results:
          path: ~/repo/data-generator-postgres-e2e/build/test-results
      - store_artifacts:
          path: ~/repo/data-generator-postgres-e2e/build/reports/tests/test
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - core:
          requires:
            - build
      - mongodb:
          requires:
            - build
      - postgres:
          requires:
            - build
