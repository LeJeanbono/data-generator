apply plugin: 'java-library'

allprojects {
    group 'com.github.lejeanbono'
    version '0.3.2'
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://dl.bintray.com/mockito/maven"
        }
    }
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        classifier 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier "javadoc"
        from javadoc.destinationDir
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'java-library-distribution'

    artifacts {
        archives jar
        archives sourceJar
        archives javadocJar
    }

    publishing {
        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                customizePom(pom)
                from components.java

                artifact(sourceJar) {
                    classifier = 'sources'
                }
                artifact(javadocJar) {
                    classifier = 'javadoc'
                }
            }
        }
    }

    signing {
        if (project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')) {
            required {
                !noPublish
            }
            sign publishing.publications
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Spring Boot Library on API to generate data in mongoDB'
            name 'Data Generator MongoDB'
            url 'https://github.com/LeJeanbono/data-generator'
            organization {
                name 'com.github.lejeanbono'
                url 'https://github.com/LeJeanbono'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/LeJeanbono/data-generator/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/mautini/schemaorg-java/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/LeJeanbono/data-generator'
                connection 'scm:git:git://github.com/LeJeanbono/data-generator.git'
                developerConnection 'scm:git:ssh://git@github.com/LeJeanbono/data-generator.git'
            }
            developers {
                developer {
                    name 'Jean-Michel Leclercq'
                }
            }
        }
    }
}